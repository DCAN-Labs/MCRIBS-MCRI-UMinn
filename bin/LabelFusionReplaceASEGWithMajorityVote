#!/usr/bin/env python3

import numpy
import sys
import os
import nibabel
import scipy.ndimage
#import matplotlib.pyplot as plt
#import pylab
import Otsu

def ismember(A, B):
    return numpy.reshape(numpy.in1d(A.ravel(), numpy.array(B)), A.shape)

if len(sys.argv) < 2:
    print("Usage: " + sys.argv[0] + " <subject id>")
    quit()

# replaces the cortical GM ASEG voxels with the nearest majority vote labels

subjID = sys.argv[1]

try:
    TissueSegDir = os.environ['TISSUESEGDIR']
except Exception:
    TissueSegDir = 'TissueSegMCRIBS'

LabelFusionNII = nibabel.load(os.path.join(TissueSegDir, subjID, subjID + "_labelfusion_asegorig.nii.gz"))
LabelFusionIMG = numpy.int16(LabelFusionNII.get_fdata())
LabelFusionIMGGMMask = ismember(LabelFusionIMG, [3, 42])

MajorityVoteNII = nibabel.load(os.path.join(TissueSegDir, subjID, subjID + "_dkt_majority_vote.nii.gz"))
MajorityVoteIMG = numpy.int16(MajorityVoteNII.get_fdata())

MajorityVoteIMGGMMask = numpy.logical_or(numpy.logical_and(MajorityVoteIMG >= 1000, MajorityVoteIMG <= 1035), numpy.logical_and(MajorityVoteIMG >= 2000, MajorityVoteIMG <= 2035))

DIndices = scipy.ndimage.distance_transform_edt(numpy.logical_not(MajorityVoteIMGGMMask), return_distances=False, return_indices=True)

# initialise the new label fusion image with the nearest cortical labels
NewLabelFusionIMG = MajorityVoteIMG[(DIndices[0], DIndices[1], DIndices[2])]

NewLabelFusionIMG[numpy.logical_not(LabelFusionIMGGMMask)] = LabelFusionIMG[numpy.logical_not(LabelFusionIMGGMMask)]

NewNII = nibabel.Nifti1Image(NewLabelFusionIMG, LabelFusionNII.affine)
nibabel.save(NewNII, os.path.join(TissueSegDir, subjID, subjID + "_labelfusion_dkt_orig.nii.gz"))

#H, BINS = numpy.histogram(T2IMG[GMOtsuIMG > 0], bins=200, range=None, normed=None, weights=None, density=True)

#plt.hist(T2IMG[GMOtsuIMG > 0], bins=200)
#plt.xticks([numpy.min(T2IMG[GMOtsuIMG == 2]), numpy.min(T2IMG[GMOtsuIMG == 3])])
#F = pylab.gcf()
#F.set_size_inches((20, 10), forward = True)
#os.makedirs('GMOtsuHist', exist_ok = True)
#plt.savefig(os.path.join('GMOtsuHist', subjID + "_gm_hist.png"))
#NewNII = nibabel.Nifti1Image(numpy.single(numpy.mean(numpy.single(allDKTIMG == 1021), axis = 3)), LabelFusionNII.affine)
#nibabel.save(NewNII, os.path.join(TissueSegDir, subjID, subjID + "_all_lh_pericalcarine.nii.gz"))

#NewNII = nibabel.Nifti1Image(numpy.single(numpy.mean(numpy.single(allDKTIMG == 2021), axis = 3)), LabelFusionNII.affine)
#nibabel.save(NewNII, os.path.join(TissueSegDir, subjID, subjID + "_all_rh_pericalcarine.nii.gz"))

#NewNII = nibabel.Nifti1Image(numpy.uint8(VoxelsToReplace), LabelFusionNII.affine)
#nibabel.save(NewNII, os.path.join(TissueSegDir, subjID, subjID + "_voxelstoreplace.nii.gz"))
