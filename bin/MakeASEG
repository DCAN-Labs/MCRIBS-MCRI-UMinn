#!/usr/bin/env python3

import numpy
import sys
import os
import nibabel
import getopt
import scipy.ndimage

def ismember(A, B):
    return numpy.reshape(numpy.in1d(A.ravel(), numpy.array(B)), A.shape)

#@profile
opts, args = getopt.getopt(sys.argv[1:], "vh", [])

if len(args) != 1:
    print(sys.argv[0] + " <subject id>")
    exit()

verbose = False
for o, a in opts:
    if o == '-v':
        verbose = True

SubjId = args[0]

RibbonNII = nibabel.load(os.path.join('freesurfer', SubjId, 'mri', 'ribbon.mgz'))
RibbonIMG = numpy.int16(RibbonNII.get_fdata())

ASEGPresurfNII = nibabel.load(os.path.join('freesurfer', SubjId, 'mri', 'aseg.presurf.mgz'))
ASEGPresurfIMG = numpy.int16(ASEGPresurfNII.get_fdata())

# search and replace
ASEGIMG = numpy.array(ASEGPresurfIMG)

# replace LH cortex, CSF with ribbon WM
ASEGIMG[numpy.logical_and(RibbonIMG == 2, ismember(ASEGPresurfIMG, [0, 3, 165, 258, 24]))] = 2
# replace RH cortex, CSF with ribbon WM
ASEGIMG[numpy.logical_and(RibbonIMG == 41, ismember(ASEGPresurfIMG, [0, 42, 165, 258, 24]))] = 41

# insert ribbon cortex
ASEGIMG[RibbonIMG == 3] = 3
ASEGIMG[RibbonIMG == 42] = 42

# replace cortex outside of ribbon with 0
ASEGIMG[numpy.logical_and(RibbonIMG == 0, ismember(ASEGPresurfIMG, [2, 3, 41, 42]))] = 0

# fill holes with CSF
ASEGIMGMask = (ASEGIMG > 0)
#ASEGIMGMaskFilled = scipy.ndimage.binary_fill_holes(ASEGIMGMask)
ASEGIMGMaskFilled = scipy.ndimage.binary_closing(ASEGIMGMask, iterations = 5)
ASEGIMG[numpy.logical_and(ASEGIMGMaskFilled, numpy.logical_not(ASEGIMGMask))] = 24

NewASEGNII = nibabel.MGHImage(ASEGIMG, ASEGPresurfNII.affine, ASEGPresurfNII.header)
nibabel.save(NewASEGNII, os.path.join('freesurfer', SubjId, 'mri', 'aseg.mgz'))
